/* ==================================
 * COMPUTER GENERATED -- DO NOT EDIT
 * ==================================
 */
#include "../src/util/resource.h"
#include "../src/util/logging.h"

#define INCBIN_PREFIX
#define INCBIN_STYLE INCBIN_STYLE_SNAKE
#include "../src/nix/incbin/incbin.h"

${INCBIN_DEF}

typedef struct{
    char *filename;
    size_t size;
    void *data;
} resource_info;

static resource_info *resource_mapping;

static resource_init(){
    if(!resource_mapping){
        resource_info mapping[] = {
            ${RESOURCE_MAPPING}
            {NULL, 0, NULL}
        };
        resource_mapping = mapping;
    }
}

static resource_info *get_resource_info(const char *filename){
    resource_init();
    for(int i = 0; resource_mapping[i].filename; i++){
        if(!strcmp(filename, resource_mapping[i].filename))
            return &resource_mapping[i];
    }
    return NULL;
}

bool_t resource_exists(const char *filename){
    return get_resource_info(filename) != NULL;
}


void *resource_get(const char *filename){
    resource_info *info = get_resource_info(filename);
    if(!info){
        LOG("Failed to find resource info\n");
        return NULL;
    }

    return info->data;
}

size_t resource_size(const char *filename){
    resource_info *info = get_resource_info(filename);
    if(!info){
        LOG("Failed to find resource info\n");
        return NULL;
    }

    return info->size;
}